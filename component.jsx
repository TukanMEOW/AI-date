import React, { useState, useEffect, useCallback } from 'react';

// Telegram WebApp API integration
const getTelegramWebApp = () => {
  return window.Telegram?.WebApp;
};

// –í—ã–Ω–µ—Å–µ–º ChatInput –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
const ChatInput = React.memo(({ matchId, onSendMessage }) => {
  const [message, setMessage] = useState('');
  
  const handleSend = useCallback(() => {
    const messageText = message.trim();
    console.log('üîÑ ChatInput handleSend:', { matchId, message: messageText });
    
    if (messageText) {
      console.log('‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ:', messageText);
      onSendMessage(matchId, messageText);
      setMessage('');
      console.log('üßπ –û—á–∏—â–µ–Ω input');
    } else {
      console.log('‚ùå –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º');
    }
  }, [matchId, message, onSendMessage]);

  const handleKeyPress = useCallback((e) => {
    if (e.key === 'Enter') {
      e.preventDefault();
      handleSend();
    }
  }, [handleSend]);

  const handleChange = useCallback((e) => {
    setMessage(e.target.value);
  }, []);

  return (
    <div className="bg-white p-4 border-t border-gray-100">
      <div className="flex items-center space-x-2">
        <input
          type="text"
          value={message}
          onChange={handleChange}
          onKeyPress={handleKeyPress}
          placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
          className="flex-1 px-4 py-2 border border-gray-300 rounded-full focus:outline-none focus:border-pink-500"
          autoComplete="off"
        />
        <button
          onClick={handleSend}
          className="p-2 bg-pink-500 text-white rounded-full hover:bg-pink-600 transition-colors"
        >
          <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8" />
          </svg>
        </button>
      </div>
    </div>
  );
});

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
const DatingApp = () => {
  const [currentView, setCurrentView] = useState('discover');
  const [currentProfile, setCurrentProfile] = useState(0);

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [authToken, setAuthToken] = useState(null);
  const [authError, setAuthError] = useState(null);
  const [userProfile, setUserProfile] = useState(null);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
  
useEffect(() => {
  const initializeApp = async () => {
    let tg = null;
    try {
      tg = window.Telegram?.WebApp;
      if (!tg) throw new Error("Telegram WebApp –Ω–µ –Ω–∞–π–¥–µ–Ω");

      tg.ready?.();
      tg.expand?.();
      tg.setHeaderColor?.("#FF69B4");
      tg.setBackgroundColor?.("#FFFFFF");

      if (tg.MainButton) {
        tg.MainButton.setText("–ù–∞–π—Ç–∏ –ø–∞—Ä—É");
        tg.MainButton.color = "#FF69B4";
        tg.MainButton.textColor = "#FFFFFF";
      }

      console.log("‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
      if (tg.initDataUnsafe?.user) {
        console.log("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", tg.initDataUnsafe.user);
      } else {
        console.warn("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ initDataUnsafe");
      }

      await authenticateUser(tg);
    } catch (e) {
      console.warn("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å Telegram WebApp:", e.message);

      const confirmTest = window.confirm("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ Telegram. –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ?");
      if (confirmTest) {
        console.log("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
        await authenticateUser(null);
      }
    }
  };

  initializeApp();
}, []);


  // –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –±—ç–∫–µ–Ω–¥
  const authenticateUser = async (tg) => {
    try {
      console.log('üîê –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

      // –ü–æ–ª—É—á–∞–µ–º initData –∏–∑ Telegram SDK
      let initDataRaw = '';
      
      try {
        const { retrieveRawInitData } = await import('@telegram-apps/sdk');
        initDataRaw = retrieveRawInitData();
        console.log('üì± Raw init data –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ SDK');
      } catch (sdkError) {
        console.log('‚ö†Ô∏è SDK –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–ª—É—á–∞–µ–º initData –∏–∑ WebApp API');
        // Fallback: –ø–æ–ª—É—á–∞–µ–º –∏–∑ WebApp API
        if (tg && tg.initData) {
          initDataRaw = tg.initData;
        } else {
          throw new Error('InitData –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
        }
      }

      if (!initDataRaw) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å initData');
      }

      console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      const response = await fetch('/api/auth', {
        method: 'POST',
        headers: {
          'Authorization': `tma ${initDataRaw}`,
          'Content-Type': 'application/json'
        }
      });

      if (!response.ok) {
        const errorData = await response.json().catch(() => ({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' }));
        throw new Error(errorData.error || `HTTP ${response.status}`);
      }

      const userData = await response.json();
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', userData);

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      setIsAuthenticated(true);
      setUserProfile(userData);
      setAuthError(null);

      // –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ (–µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –µ–≥–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç)
      if (userData.token) {
        setAuthToken(userData.token);
        localStorage.setItem('authToken', userData.token);
      }

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
      setAuthError(error.message);
      setIsAuthenticated(false);

      // Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram –Ω–∞–ø—Ä—è–º—É—é –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
      if (tg && tg.initDataUnsafe?.user) {
        console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
        const fallbackUser = {
          id: tg.initDataUnsafe.user.id,
          first_name: tg.initDataUnsafe.user.first_name,
          last_name: tg.initDataUnsafe.user.last_name,
          username: tg.initDataUnsafe.user.username,
          language_code: tg.initDataUnsafe.user.language_code,
          is_premium: tg.initDataUnsafe.user.is_premium || false
        };
        
        setUserProfile(fallbackUser);
        setIsAuthenticated(true);
        setAuthError('–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–±–µ–∑ –±—ç–∫–µ–Ω–¥–∞)');
      } else {
        // –ü–æ–ª–Ω—ã–π fallback –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ Telegram
        console.log('üîÑ –ü–æ–ª–Ω—ã–π fallback - —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        const testUser = {
          id: Date.now(),
          first_name: '–ö–∏—Ä–∏–ª–ª',
          last_name: '–õ—É–∫–∏—á–µ–≤',
          username: 'kirill_test',
          language_code: 'ru',
          is_premium: false
        };
        
        setUserProfile(testUser);
        setIsAuthenticated(true);
        setAuthError('–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º (–±–µ–∑ Telegram)');
      }
    }
  };
  const [likedProfiles, setLikedProfiles] = useState([]);
  const [matches, setMatches] = useState([]);
  const [selectedMatch, setSelectedMatch] = useState(null);
  const [chatMessages, setChatMessages] = useState({});
  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);
  const [forceUpdate, setForceUpdate] = useState(0);
  const [deletingChat, setDeletingChat] = useState(null);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
  const [messageUpdate, setMessageUpdate] = useState(0);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
  const [showFullScreenMatch, setShowFullScreenMatch] = useState(null);
  const [matchPhotoIndex, setMatchPhotoIndex] = useState(0);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –¥–µ–≤—É—à–∫–∏
  const [showProfileView, setShowProfileView] = useState(null);
  const [profilePhotoIndex, setProfilePhotoIndex] = useState(0);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∑–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–≤–∞–π–ø–∞
  const [isDragging, setIsDragging] = useState(false);
  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });
  const [startPos, setStartPos] = useState({ x: 0, y: 0 });
  const [dragDistance, setDragDistance] = useState(0);
  const [isClick, setIsClick] = useState(false);
  const [isHolding, setIsHolding] = useState(false);

  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const currentUser = userProfile ? {
    name: userProfile.first_name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
    telegramId: userProfile.id,
    username: userProfile.username,
    firstName: userProfile.first_name,
    lastName: userProfile.last_name,
    languageCode: userProfile.language_code,
    isPremium: userProfile.is_premium || false,
    age: 28, // –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    bio: "Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫, –ª—é–±–∏—Ç–µ–ª—å –∫–æ—Ñ–µ –∏ —Ö–æ—Ä–æ—à–µ–π –º—É–∑—ã–∫–∏",
    interests: ["–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–ö–æ—Ñ–µ", "–ú—É–∑—ã–∫–∞", "–°–ø–æ—Ä—Ç"],
    photos: [
      "assets/user_photo1.png?prompt=Young%20professional%20man%20portrait%20casual%20style",
      "assets/user_photo2.png?prompt=Man%20working%20on%20laptop%20modern%20office",
      "assets/user_photo3.png?prompt=Man%20traveling%20mountain%20landscape"
    ]
  } : null;

  // –î–µ–º–æ-–ø—Ä–æ—Ñ–∏–ª–∏ —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π
  const profiles = [
    {
      id: 1,
      name: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞",
      age: 23,
      city: "–ú–æ—Å–∫–≤–∞",
      distance: 2,
      bio: "–ò—â—É —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω—É—é –¥—É—à—É üí´",
      interests: ["–ü—Ä–∞–≤–æ—Å–ª–∞–≤–∏–µ", "–†—ã–±—ã", "162—Å–º", "–°—Ä–µ–¥–Ω–µ–µ", "–ù–µ—Ç", "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ"],
      photos: [
        "assets/ekaterina_1.png?prompt=Beautiful%20young%20brunette%20woman%2023%20years%20old%20elegant%20portrait%20natural%20makeup%20soft%20lighting",
        "assets/ekaterina_2.png?prompt=Young%20brunette%20woman%20in%20orthodox%20church%20praying%20peaceful%20spiritual%20atmosphere",
        "assets/ekaterina_3.png?prompt=Portrait%20young%20woman%20reading%20book%20cozy%20cafe%20intellectual%20style",
        "assets/ekaterina_4.png?prompt=Young%20woman%20in%20nature%20park%20casual%20dress%20gentle%20smile%20golden%20hour"
      ],
      job: "–î–∏–∑–∞–π–Ω–µ—Ä",
      education: "–ú–ì–£",
      height: "162 —Å–º"
    },
    {
      id: 2,
      name: "–ê–Ω–Ω–∞",
      age: 25,
      city: "–ú–æ—Å–∫–≤–∞", 
      distance: 5,
      bio: "–õ—é–±–ª—é –∂–∏–∑–Ω—å –≤–æ –≤—Å–µ—Ö –µ—ë –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è—Ö ‚ú®",
      interests: ["–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è", "–ô–æ–≥–∞", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–ú–æ–¥–∞", "–ò—Å–∫—É—Å—Å—Ç–≤–æ"],
      photos: [
        "assets/anna_1.png?prompt=Beautiful%20young%20blonde%20woman%2025%20years%20old%20bohemian%20style%20photographer%20creative%20portrait",
        "assets/anna_2.png?prompt=Young%20blonde%20woman%20doing%20yoga%20pose%20peaceful%20studio%20athletic%20wear",
        "assets/anna_3.png?prompt=Young%20woman%20traveling%20mountain%20landscape%20backpack%20adventure%20style",
        "assets/anna_4.png?prompt=Portrait%20young%20woman%20fashion%20photography%20artistic%20lighting%20modern%20style"
      ],
      job: "–§–æ—Ç–æ–≥—Ä–∞—Ñ",
      education: "–®–∫–æ–ª–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏",
      height: "165 —Å–º"
    },
    {
      id: 3,
      name: "–ú–∞—Ä–∏—è",
      age: 26,
      city: "–ú–æ—Å–∫–≤–∞",
      distance: 12,
      bio: "–¢–≤–æ—Ä—á–µ—Å–∫–∞—è –Ω–∞—Ç—É—Ä–∞ –≤ –ø–æ–∏—Å–∫–∞—Ö –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è üé®",
      interests: ["–ò—Å–∫—É—Å—Å—Ç–≤–æ", "–î–∏–∑–∞–π–Ω", "–ö–∏–Ω–æ", "–ñ–∏–≤–æ–ø–∏—Å—å", "–ú—É–∑—ã–∫–∞"],
      photos: [
        "assets/maria_1.png?prompt=Beautiful%20young%20redhead%20woman%2026%20years%20old%20artistic%20creative%20style%20warm%20lighting",
        "assets/maria_2.png?prompt=Young%20redhead%20woman%20in%20art%20studio%20painting%20canvas%20creative%20workspace",
        "assets/maria_3.png?prompt=Creative%20young%20woman%20graphic%20design%20workspace%20modern%20office%20artistic",
        "assets/maria_4.png?prompt=Portrait%20young%20artist%20woman%20gallery%20setting%20sophisticated%20artistic%20atmosphere"
      ],
      job: "–•—É–¥–æ–∂–Ω–∏—Ü–∞",
      education: "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∞–∫–∞–¥–µ–º–∏—è",
      height: "168 —Å–º"
    }
  ];

  const sendMessage = useCallback(async (matchId, message) => {
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è:', { matchId, message });
    
    if (!message.trim()) {
      console.log('‚ùå –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–º–µ–Ω–∞');
      return;
    }
    
    const userMessage = message.trim();
    const newMsg = {
      id: Date.now(),
      text: userMessage,
      sender: 'user',
      timestamp: new Date().toISOString()
    };
    
    console.log('üìù –°–æ–∑–¥–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', newMsg);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    setChatMessages(prev => {
      const existingMessages = prev[matchId] || [];
      const updatedMessages = [...existingMessages, newMsg];
      
      const updated = {
        ...prev,
        [matchId]: updatedMessages
      };
      
      console.log('üíæ –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ë—ã–ª–æ:', existingMessages.length, '–°—Ç–∞–ª–æ:', updatedMessages.length);
      return updated;
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
    setMessageUpdate(prev => prev + 1);
    setForceUpdate(prev => prev + 1);

    // –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã (–¥–ª—è –¥–µ–º–æ)
    const match = profiles.find(p => p.id === matchId);
    setTimeout(() => {
      console.log('ü§ñ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–∞ –¥–ª—è:', userMessage);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç
      setChatMessages(currentChatMessages => {
        const currentMessages = currentChatMessages[matchId] || [];
        console.log('üîç –¢–µ–∫—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–∞:', currentMessages.length);
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏
        const smartResponse = generateSmartResponse(userMessage, currentMessages, match);
        
        const autoReply = {
          id: Date.now() + Math.random(),
          text: smartResponse,
          sender: 'match',
          timestamp: new Date().toISOString()
        };
        
        console.log('ü§ñ –°–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç:', autoReply.text);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç –∫ —Ç–µ–∫—É—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è–º
        const finalMessages = [...currentMessages, autoReply];
        
        const updated = {
          ...currentChatMessages,
          [matchId]: finalMessages
        };
        
        console.log('üíæ –î–æ–±–∞–≤–ª–µ–Ω –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç. –ò—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π:', finalMessages.length);
        console.log('üìä –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å =', finalMessages.filter(m => m.sender === 'user').length, '–¥–µ–≤—É—à–∫–∞ =', finalMessages.filter(m => m.sender === 'match').length);
        
        return updated;
      });
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
      setMessageUpdate(prev => prev + 1);
      setForceUpdate(prev => prev + 1);
      
    }, 2000);
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–º–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
  const generateSmartResponse = (userMessage, messageHistory, match) => {
    const msg = userMessage.toLowerCase();
    const isFirstMessage = messageHistory.length <= 1;
    
    // –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
    const patterns = {
      greeting: ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–¥–æ–±—Ä–æ —É—Ç—Ä–æ', '–¥–æ–±—Ä—ã–π –¥–µ–Ω—å', '–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä', '—Ö–∞–π', '–ø—Ä–∏–≤–µ—Ç–∏–∫'],
      questions: ['–∫–∞–∫ –¥–µ–ª–∞', '—á—Ç–æ –¥–µ–ª–∞–µ—à—å', '–∫–∞–∫ –∂–∏–∑–Ω—å', '—á—Ç–æ –Ω–æ–≤–æ–≥–æ', '–∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ'],
      compliments: ['–∫—Ä–∞—Å–∏–≤–∞—è', '–ø—Ä–µ–∫—Ä–∞—Å–Ω–∞—è', '–∫—Ä–∞—Å–æ—Ç–∞', '–ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å', '—Å–∏–º–ø–∞—Ç–∏—á–Ω–∞—è'],
      interests: ['—Ö–æ–±–±–∏', '—É–≤–ª–µ—á–µ–Ω–∏—è', '–∏–Ω—Ç–µ—Ä–µ—Å—ã', '—Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è', '–ª—é–±–∏—à—å'],
      work: ['—Ä–∞–±–æ—Ç–∞', '–ø—Ä–æ—Ñ–µ—Å—Å–∏—è', '–∫–∞—Ä—å–µ—Ä–∞', '–¥–µ–ª–∞', '—Ç—Ä—É–¥'],
      weekend: ['–≤—ã—Ö–æ–¥–Ω—ã–µ', '—Å—É–±–±–æ—Ç–∞', '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ', '–ø–ª–∞–Ω—ã', '–æ—Ç–¥—ã—Ö'],
      meeting: ['–≤—Å—Ç—Ä–µ—á–∞', '–≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è', '—É–≤–∏–¥–µ—Ç—å—Å—è', '—Å–≤–∏–¥–∞–Ω–∏–µ', '–∫–æ—Ñ–µ', '–ø–æ–≥—É–ª—è—Ç—å'],
      travel: ['–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ', '–ø–æ–µ–∑–¥–∫–∞', '–æ—Ç–ø—É—Å–∫', '—Å—Ç—Ä–∞–Ω–∞', '–≥–æ—Ä–æ–¥']
    };
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
    let responseType = 'general';
    for (const [type, words] of Object.entries(patterns)) {
      if (words.some(word => msg.includes(word))) {
        responseType = type;
        break;
      }
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    let responses = [];
    
    if (isFirstMessage) {
      responses = [
        `–ü—Ä–∏–≤–µ—Ç! –û—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! üòä`,
        `–ü—Ä–∏–≤–µ—Ç! –†–∞–¥–∞, —á—Ç–æ –º—ã —Å–æ–≤–ø–∞–ª–∏! ‚ú®`,
        `–ü—Ä–∏–≤–µ—Ç–∏–∫! –°–ø–∞—Å–∏–±–æ –∑–∞ –ª–∞–π–∫, —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å —Ç–æ–∂–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è! üíï`,
        `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! –ö–∞–∫ –¥–µ–ª–∞? üòä`
      ];
    } else {
      switch (responseType) {
        case 'greeting':
          responses = [
            `–ü—Ä–∏–≤–µ—Ç! –•–æ—Ä–æ—à–æ, —á—Ç–æ –ø–∏—à–µ—à—å! üòä`,
            `–ü—Ä–∏–≤–µ—Ç–∏–∫! –†–∞–¥–∞ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! ‚ú®`,
            `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ? üòä`
          ];
          break;
          
        case 'questions':
          responses = [
            `–û—Ç–ª–∏—á–Ω–æ! –¢–æ–ª—å–∫–æ —á—Ç–æ ${match.name === '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞' ? '–∏–∑ —Ü–µ—Ä–∫–≤–∏ –≤–µ—Ä–Ω—É–ª–∞—Å—å' : match.name === '–ê–Ω–Ω–∞' ? '—Å –π–æ–≥–∏ –ø—Ä–∏—à–ª–∞' : '—Ä–∏—Å–æ–≤–∞–ª–∞'} üòä –ê —É —Ç–µ–±—è –∫–∞–∫ –¥–µ–ª–∞?`,
            `–•–æ—Ä–æ—à–æ! –†–∞–±–æ—Ç–∞—é ${match.job === '–î–∏–∑–∞–π–Ω–µ—Ä' ? '–Ω–∞–¥ –Ω–æ–≤—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º' : match.job === '–§–æ—Ç–æ–≥—Ä–∞—Ñ' ? '–Ω–∞–¥ —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–µ–π' : '–Ω–∞–¥ –∫–∞—Ä—Ç–∏–Ω–æ–π'} üé® –ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞?`,
            `–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –î—É–º–∞—é –æ ${match.interests[0].toLowerCase()} üòä –ê —á—Ç–æ —É —Ç–µ–±—è –Ω–æ–≤–æ–≥–æ?`
          ];
          break;
          
        case 'compliments':
          responses = [
            `–°–ø–∞—Å–∏–±–æ! –û—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ! üòä –¢—ã —Ç–æ–∂–µ —Å–∏–º–ø–∞—Ç–∏—á–Ω—ã–π!`,
            `–û–π, —Å–ø–∞—Å–∏–±–æ! –°–º—É—â–∞–µ—à—å –º–µ–Ω—è! üòä‚ú®`,
            `–ë–ª–∞–≥–æ–¥–∞—Ä—é! –ú–Ω–µ —Ç–æ–∂–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å! üíï`
          ];
          break;
          
        case 'interests':
          const mainInterest = match.interests[0];
          responses = [
            `–û—á–µ–Ω—å –ª—é–±–ª—é ${mainInterest.toLowerCase()}! ${match.name === '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞' ? '–≠—Ç–æ –¥–∞–µ—Ç –º–Ω–µ —É–º–∏—Ä–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ' : match.name === '–ê–Ω–Ω–∞' ? '–ü–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –±–∞–ª–∞–Ω—Å' : '–≠—Ç–æ –º–æ—è —Å—Ç—Ä–∞—Å—Ç—å!'} üòä –ê —Ç—ã —á–µ–º —É–≤–ª–µ–∫–∞–µ—à—å—Å—è?`,
            `–ú–æ–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã - ${match.interests.slice(0, 2).map(i => i.toLowerCase()).join(' –∏ ')} üé® –ê —á—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è?`,
            `–û–±–æ–∂–∞—é ${mainInterest.toLowerCase()}! –ê —É —Ç–µ–±—è –µ—Å—Ç—å —Ö–æ–±–±–∏? üòä`
          ];
          break;
          
        case 'work':
          responses = [
            `–†–∞–±–æ—Ç–∞—é ${match.job === '–î–∏–∑–∞–π–Ω–µ—Ä' ? '–¥–∏–∑–∞–π–Ω–µ—Ä–æ–º - —Å–æ–∑–¥–∞—é –∫—Ä–∞—Å–æ—Ç—É' : match.job === '–§–æ—Ç–æ–≥—Ä–∞—Ñ' ? '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–º - –ª–æ–≤–ª—é –º–æ–º–µ–Ω—Ç—ã' : '—Ö—É–¥–æ–∂–Ω–∏—Ü–µ–π - —Ä–∏—Å—É—é –º–∏—Ä'} üé® –ê —Ç—ã —á–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è?`,
            `–ú–æ—è —Ä–∞–±–æ—Ç–∞ - ${match.job.toLowerCase()}, –æ—á–µ–Ω—å –ª—é–±–ª—é —Ç–æ, —á—Ç–æ –¥–µ–ª–∞—é! üòä –ê —Ç–≤–æ—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è?`,
            `${match.job} - —ç—Ç–æ –º–æ—è —Å—Ç—Ä–∞—Å—Ç—å! üíï –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç–µ!`
          ];
          break;
          
        case 'weekend':
          responses = [
            `–ü–ª–∞–Ω–∏—Ä—É—é ${match.name === '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞' ? '—Å—Ö–æ–¥–∏—Ç—å –≤ —Ü–µ—Ä–∫–æ–≤—å –∏ –ø–æ—á–∏—Ç–∞—Ç—å' : match.name === '–ê–Ω–Ω–∞' ? '–π–æ–≥—É –∏ —Ñ–æ—Ç–æ–ø—Ä–æ–≥—É–ª–∫—É' : '—Ä–∏—Å–æ–≤–∞—Ç—å –∏ —Å—Ö–æ–¥–∏—Ç—å –≤ –≥–∞–ª–µ—Ä–µ—é'} üòä –ê —Ç–≤–æ–∏ –ø–ª–∞–Ω—ã?`,
            `–•–æ—á—É –∑–∞–Ω—è—Ç—å—Å—è ${match.interests[0].toLowerCase()} –∏ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å! –ê —Ç—ã –∫–∞–∫ –ø—Ä–æ–≤–æ–¥–∏—à—å –≤—ã—Ö–æ–¥–Ω—ã–µ? üéâ`,
            `–î—É–º–∞—é –ø–æ—Å–≤—è—Ç–∏—Ç—å –≤—Ä–µ–º—è ${match.interests[0].toLowerCase()} üòä –ê —É —Ç–µ–±—è –µ—Å—Ç—å –ø–ª–∞–Ω—ã?`
          ];
          break;
          
        case 'meeting':
          responses = [
            `–ë—ã–ª–æ –±—ã –∑–¥–æ—Ä–æ–≤–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è! ‚òï –ú–æ–∂–µ—Ç –±—ã—Ç—å, ${match.name === '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞' ? '–ø—Ä–æ–≥—É–ª—è–µ–º—Å—è –ø–æ –ø–∞—Ä–∫—É' : match.name === '–ê–Ω–Ω–∞' ? '—Å—Ö–æ–¥–∏–º –Ω–∞ –≤—ã—Å—Ç–∞–≤–∫—É' : '–ø–æ—Å–µ—Ç–∏–º –∞—Ä—Ç-–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ'}? üòä`,
            `–ú–Ω–µ —Ç–æ–∂–µ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è! üíï –ì–¥–µ –ª—é–±–∏—à—å –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è?`,
            `–û—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è! ${match.name === '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞' ? '–ú–æ–∂–µ—Ç, –≤ —É—é—Ç–Ω–æ–º –∫–∞—Ñ–µ?' : match.name === '–ê–Ω–Ω–∞' ? '–ú–æ–∂–µ—Ç, –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ?' : '–í –∫–∞–∫–æ–º-—Ç–æ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–º –º–µ—Å—Ç–µ?'} ‚ú®`
          ];
          break;
          
        case 'travel':
          responses = [
            `–û–±–æ–∂–∞—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è! ${match.name === '–ê–Ω–Ω–∞' ? '–ù–µ–¥–∞–≤–Ω–æ –±—ã–ª–∞ –≤ –≥–æ—Ä–∞—Ö - –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ –≤–∏–¥—ã!' : '–ú–µ—á—Ç–∞—é –ø–æ—Å–µ—Ç–∏—Ç—å –ï–≤—Ä–æ–ø—É'} üó∫Ô∏è –ê —Ç—ã –∫—É–¥–∞ –ª—é–±–∏—à—å –µ–∑–¥–∏—Ç—å?`,
            `–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è - —ç—Ç–æ —Ç–∞–∫ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç! –û—Å–æ–±–µ–Ω–Ω–æ –¥–ª—è ${match.job.toLowerCase()} üòä –ö–∞–∫–∏–µ —Å—Ç—Ä–∞–Ω—ã —Ç–µ–±–µ –Ω—Ä–∞–≤—è—Ç—Å—è?`,
            `–î–∞, –ª—é–±–ª—é –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ –º–µ—Å—Ç–∞! –ê —Ç—ã —á–∞—Å—Ç–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤—É–µ—à—å? ‚úàÔ∏è`
          ];
          break;
          
        default:
          responses = [
            `–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –†–∞—Å—Å–∫–∞–∂–∏ –±–æ–ª—å—à–µ üòä`,
            `–ü–æ–Ω–∏–º–∞—é —Ç–µ–±—è! ${match.name === '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞' ? '–Ø —Ç–æ–∂–µ –∏–Ω–æ–≥–¥–∞ —Ç–∞–∫ –¥—É–º–∞—é' : match.name === '–ê–Ω–Ω–∞' ? '–ú–Ω–µ –±–ª–∏–∑–∫–∞ —ç—Ç–∞ —Ç–µ–º–∞' : '–ó–≤—É—á–∏—Ç –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ'} ‚ú®`,
            `–°–æ–≥–ª–∞—Å–Ω–∞! –ê –∫–∞–∫ —Ç—ã –∫ —ç—Ç–æ–º—É –ø—Ä–∏—à–µ–ª? ü§î`,
            `–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ç–≤–æ–π –≤–∑–≥–ª—è–¥ –Ω–∞ –≤–µ—â–∏! üíï`,
            `–ö–ª–∞—Å—Å–Ω–æ! ${match.interests[0]} —Ç–æ–∂–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω–æ —Å —ç—Ç–∏–º üòä`
          ];
      }
    }
    
    return responses[Math.floor(Math.random() * responses.length)];
  };

  // –ü–†–û–°–¢–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö —á–∞—Ç–æ–≤
  const clearAllChats = useCallback(() => {
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —á–∞—Ç–æ–≤');
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
    setSelectedMatch(null);
    setDeletingChat(null);
    setShowFullScreenMatch(null);
    setShowProfileView(null);
    
    // –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    setMatches([]);
    setChatMessages({});
    setLikedProfiles([]);
    
    console.log('‚úÖ –í—Å–µ —á–∞—Ç—ã –æ—á–∏—â–µ–Ω—ã');
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö API –∑–∞–ø—Ä–æ—Å–æ–≤
  const makeAuthenticatedRequest = useCallback(async (url, options = {}) => {
    try {
      const headers = {
        'Content-Type': 'application/json',
        ...options.headers
      };

      // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
      if (authToken) {
        headers['Authorization'] = `Bearer ${authToken}`;
      } else {
        const tg = getTelegramWebApp();
        if (tg) {
          // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º initData –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
          try {
            const { retrieveRawInitData } = await import('@telegram-apps/sdk');
            const initDataRaw = retrieveRawInitData();
            headers['Authorization'] = `tma ${initDataRaw}`;
          } catch (error) {
            console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å initData –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞');
          }
        }
      }

      const response = await fetch(url, {
        ...options,
        headers
      });

      if (!response.ok) {
        const errorData = await response.json().catch(() => ({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' }));
        throw new Error(errorData.error || `HTTP ${response.status}`);
      }

      return await response.json();
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ API –∑–∞–ø—Ä–æ—Å–∞:', error);
      throw error;
    }
  }, [authToken]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
  const saveUserProfile = useCallback(async (profileData) => {
    try {
      console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...');
      
      const result = await makeAuthenticatedRequest('/api/profile', {
        method: 'PUT',
        body: JSON.stringify(profileData)
      });

      console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', result);
      return result;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', error);
      // Fallback: —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
      localStorage.setItem(`user_profile_${userProfile.id}`, JSON.stringify(profileData));
      throw error;
    }
  }, [makeAuthenticatedRequest, userProfile]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞
  const fetchMatches = useCallback(async () => {
    try {
      console.log('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞...');
      
      const result = await makeAuthenticatedRequest('/api/matches');
      
      console.log('‚úÖ –°–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞:', result);
      return result;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π:', error);
      // Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      return [];
    }
  }, [makeAuthenticatedRequest]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä
  const sendNotification = useCallback(async (recipientId, message) => {
    try {
      console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä...');
      
      const result = await makeAuthenticatedRequest('/api/notifications', {
        method: 'POST',
        body: JSON.stringify({
          recipientId,
          message,
          type: 'chat_message'
        })
      });

      console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä');
      return result;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
      
      // Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ WebApp API
      const tg = getTelegramWebApp();
      if (tg && tg.sendData) {
        tg.sendData(JSON.stringify({
          type: 'notification',
          recipientId,
          message,
          from: currentUser
        }));
        console.log('üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ Telegram WebApp API');
      }
    }
  }, [makeAuthenticatedRequest, currentUser]);

  // –ü–†–û–°–¢–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —á–∞—Ç–∞
  const deleteChat = useCallback((matchId) => {
    console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —á–∞—Ç–∞:', matchId);
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç –µ—Å–ª–∏ —ç—Ç–æ –æ–Ω
    if (selectedMatch && selectedMatch.id === matchId) {
      setSelectedMatch(null);
    }
    
    // –£–¥–∞–ª—è–µ–º –∏–∑ –≤—Å–µ—Ö —Å–ø–∏—Å–∫–æ–≤
    setMatches(prev => prev.filter(match => match.id !== matchId));
    setLikedProfiles(prev => prev.filter(id => id !== matchId));
    setChatMessages(prev => {
      const updated = { ...prev };
      delete updated[matchId];
      return updated;
    });
    
    console.log('‚úÖ –ß–∞—Ç —É–¥–∞–ª–µ–Ω:', matchId);
  }, [selectedMatch]);

  const handleLike = () => {
    // –•—ç–ø—Ç–∏–∫ —Ñ–∏–¥–±–µ–∫ –¥–ª—è Telegram
    const tg = getTelegramWebApp();
    if (tg && tg.HapticFeedback) {
      tg.HapticFeedback.impactOccurred('light');
    }
    
    const profile = profiles[currentProfile];
    if (!likedProfiles.includes(profile.id)) {
      setLikedProfiles([...likedProfiles, profile.id]);
      
      // –°–æ–∑–¥–∞–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å –≤—ã—Å–æ–∫–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é (70%)
      if (Math.random() > 0.3) {
        const existingMatch = matches.find(m => m.id === profile.id);
        if (!existingMatch) {
          // –ö–†–ò–¢–ò–ß–ù–û: –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –æ—á–∏—â–∞–µ–º –ª—é–±—É—é –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
          setChatMessages(prevMessages => {
            console.log('üßπ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –æ—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è', profile.name, 'ID:', profile.id);
            console.log('üîç –¢–µ–∫—É—â–∏–µ –∫–ª—é—á–∏ –≤ chatMessages:', Object.keys(prevMessages));
            console.log('üîç –°—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è ID', profile.id, ':', !!prevMessages[profile.id]);
            
            if (prevMessages[profile.id]) {
              console.log('üóëÔ∏è –ù–ê–ô–î–ï–ù–ê —Å—Ç–∞—Ä–∞—è –∏—Å—Ç–æ—Ä–∏—è! –£–¥–∞–ª—è–µ–º', (prevMessages[profile.id] || []).length, '—Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π');
            }
            
            // –í–°–ï–ì–î–ê —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –ë–ï–ó —ç—Ç–æ–≥–æ –∫–ª—é—á–∞
            const cleanMessages = {};
            Object.keys(prevMessages).forEach(key => {
              if (key !== profile.id.toString()) {
                cleanMessages[key] = prevMessages[key];
              }
            });
            
            console.log('‚úÖ –ß–ò–°–¢–´–ï —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:', Object.keys(cleanMessages));
            console.log('üî• –ì–ê–†–ê–ù–¢–ò–Ø: –¥–ª—è ID', profile.id, '–∏—Å—Ç–æ—Ä–∏—è –ü–û–õ–ù–û–°–¢–¨–Æ –£–î–ê–õ–ï–ù–ê');
            return cleanMessages;
          });
          
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
          setMatches(prevMatches => {
            const doubleCheck = prevMatches.find(m => m.id === profile.id);
            if (doubleCheck) {
              console.log('‚ö†Ô∏è –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–æ - —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
              return prevMatches;
            }
            
            const newMatches = [...prevMatches, profile];
            console.log('üíï –°–æ–∑–¥–∞–Ω–æ –ù–û–í–û–ï —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å –ß–ò–°–¢–û–ô –∏—Å—Ç–æ—Ä–∏–µ–π:', profile.name);
            console.log('üîç –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ matches:', newMatches);
            console.log('üìä DEBUG - –†–∞–∑–º–µ—Ä –Ω–æ–≤–æ–≥–æ —Å–ø–∏—Å–∫–∞:', newMatches.length);
            return newMatches;
          });
          
          // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
          setForceUpdate(prev => {
            const newValue = prev + 1;
            console.log('üîÑ ForceUpdate –≤ Like:', newValue);
            return newValue;
          });
          setMessageUpdate(prev => {
            const newValue = prev + 1;
            console.log('üîÑ MessageUpdate –≤ Like:', newValue);
            return newValue;
          });
          
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
          setShowFullScreenMatch(profile);
          setMatchPhotoIndex(0);
          console.log('üéâ –ü–æ–∫–∞–∑–∞–Ω–æ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è');
          return; // –ù–µ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å—Ä–∞–∑—É
        }
      }
    }
    nextProfile();
  };

  const handleSuperLike = () => {
    // –•—ç–ø—Ç–∏–∫ —Ñ–∏–¥–±–µ–∫ –¥–ª—è Telegram
    const tg = getTelegramWebApp();
    if (tg && tg.HapticFeedback) {
      tg.HapticFeedback.impactOccurred('medium');
    }
    
    const profile = profiles[currentProfile];
    console.log('‚≠ê –°—É–ø–µ—Ä –ª–∞–π–∫ –Ω–∞–∂–∞—Ç –¥–ª—è:', profile.name);
    console.log('üîç DEBUG - –¢–µ–∫—É—â–∏–µ matches:', matches);
    console.log('üîç DEBUG - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è:', matches.find(m => m.id === profile.id));
    console.log('üîç DEBUG - –ü—Ä–æ—Ñ–∏–ª—å —É–∂–µ –ª–∞–π–∫–Ω—É—Ç?', likedProfiles.includes(profile.id));
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ª–∞–π–∫–Ω—É—Ç—ã–µ, –µ—Å–ª–∏ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω
    if (!likedProfiles.includes(profile.id)) {
      setLikedProfiles([...likedProfiles, profile.id]);
      console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ª–∞–π–∫–Ω—É—Ç—ã–µ');
    }
    
    // –°–£–ü–ï–† –õ–ê–ô–ö –í–°–ï–ì–î–ê –°–û–ó–î–ê–ï–¢ –°–û–í–ü–ê–î–ï–ù–ò–ï (100% –≥–∞—Ä–∞–Ω—Ç–∏—è)
    const existingMatch = matches.find(m => m.id === profile.id);
    console.log('üîç DEBUG - –°—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ:', existingMatch);
    
    if (!existingMatch) {
      // –ö–†–ò–¢–ò–ß–ù–û: –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –æ—á–∏—â–∞–µ–º –ª—é–±—É—é –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –°–£–ü–ï–† –õ–ê–ô–ö–ê
      setChatMessages(prevMessages => {
        console.log('üßπ –°–£–ü–ï–† –õ–ê–ô–ö: –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –æ—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è', profile.name, 'ID:', profile.id);
        console.log('üîç –¢–µ–∫—É—â–∏–µ –∫–ª—é—á–∏ –≤ chatMessages:', Object.keys(prevMessages));
        console.log('üîç –°—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è ID', profile.id, ':', !!prevMessages[profile.id]);
        
        if (prevMessages[profile.id]) {
          console.log('üóëÔ∏è –ù–ê–ô–î–ï–ù–ê —Å—Ç–∞—Ä–∞—è –∏—Å—Ç–æ—Ä–∏—è! –£–¥–∞–ª—è–µ–º', (prevMessages[profile.id] || []).length, '—Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π');
        }
        
        // –í–°–ï–ì–î–ê —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –ë–ï–ó —ç—Ç–æ–≥–æ –∫–ª—é—á–∞
        const cleanMessages = {};
        Object.keys(prevMessages).forEach(key => {
          if (key !== profile.id.toString()) {
            cleanMessages[key] = prevMessages[key];
          }
        });
        
        console.log('‚úÖ –ß–ò–°–¢–´–ï —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –°–£–ü–ï–† –æ—á–∏—Å—Ç–∫–∏:', Object.keys(cleanMessages));
        console.log('üî• –ì–ê–†–ê–ù–¢–ò–Ø: –¥–ª—è –°–£–ü–ï–† –õ–ê–ô–ö–ê ID', profile.id, '–∏—Å—Ç–æ—Ä–∏—è –ü–û–õ–ù–û–°–¢–¨–Æ –£–î–ê–õ–ï–ù–ê');
        return cleanMessages;
      });
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
      setMatches(prevMatches => {
        const doubleCheck = prevMatches.find(m => m.id === profile.id);
        if (doubleCheck) {
          console.log('‚ö†Ô∏è –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–æ - —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
          return prevMatches;
        }
        
        const newMatches = [...prevMatches, profile];
        console.log('üíï –°–æ–∑–¥–∞–Ω–æ –°–£–ü–ï–† —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å –ß–ò–°–¢–û–ô –∏—Å—Ç–æ—Ä–∏–µ–π:', profile.name);
        console.log('üîç DEBUG - –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ matches:', newMatches);
        console.log('üìä DEBUG - –†–∞–∑–º–µ—Ä –Ω–æ–≤–æ–≥–æ —Å–ø–∏—Å–∫–∞:', newMatches.length);
        return newMatches;
      });
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
      setForceUpdate(prev => {
        const newValue = prev + 1;
        console.log('üîÑ ForceUpdate –≤ SuperLike:', newValue);
        return newValue;
      });
      setMessageUpdate(prev => {
        const newValue = prev + 1;
        console.log('üîÑ MessageUpdate –≤ SuperLike:', newValue);
        return newValue;
      });
    } else {
      console.log('‚ö†Ô∏è –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –≤—Å–µ —Ä–∞–≤–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ');
    }
    
    // –í–°–ï–ì–î–ê –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏ —Å—É–ø–µ—Ä –ª–∞–π–∫–µ
    setShowFullScreenMatch(profile);
    setMatchPhotoIndex(0);
    console.log('üéâ –ü–æ–∫–∞–∑–∞–Ω–æ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è');
    console.log('üîç Debug - showFullScreenMatch:', profile);
    console.log('üîç Debug - matchPhotoIndex:', 0);
    
    // –ù–ï –ü–ï–†–ï–ö–õ–Æ–ß–ê–ï–ú –ø—Ä–æ—Ñ–∏–ª—å —Å—Ä–∞–∑—É - —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
    return;
  };

  const handleDislike = () => {
    // –•—ç–ø—Ç–∏–∫ —Ñ–∏–¥–±–µ–∫ –¥–ª—è Telegram
    const tg = getTelegramWebApp();
    if (tg && tg.HapticFeedback) {
      tg.HapticFeedback.impactOccurred('light');
    }
    
    nextProfile();
  };

  const nextProfile = () => {
    setCurrentProfile((prev) => (prev + 1) % profiles.length);
    setCurrentPhotoIndex(0);
  };

  // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–≤–∞–π–ø–∞
  const handleStart = (clientX, clientY) => {
    console.log('üéØ –ù–∞—á–∞–ª–æ –∫–∞—Å–∞–Ω–∏—è –¥–ª—è —Å–≤–∞–π–ø–∞');
    setIsDragging(true);
    setStartPos({ x: clientX, y: clientY });
    setDragDistance(0);
    setDragOffset({ x: 0, y: 0 });
    setIsClick(true);
    
    // –û—Ç–∫–ª—é—á–∞–µ–º –∫–ª–∏–∫ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –µ—Å–ª–∏ –Ω–∞—á–∞–ª–æ—Å—å –¥–≤–∏–∂–µ–Ω–∏–µ
    setTimeout(() => {
      if (dragDistance > 5) {
        setIsClick(false);
      }
    }, 100);
  };

  const handleMove = (clientX, clientY) => {
    if (!isDragging) return;
    
    const deltaX = clientX - startPos.x;
    const deltaY = clientY - startPos.y;
    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏–µ, —ç—Ç–æ –Ω–µ –∫–ª–∏–∫
    if (distance > 5) {
      setIsClick(false);
    }
    
    setDragOffset({ x: deltaX, y: deltaY });
    setDragDistance(distance);
    console.log('üì± –°–≤–∞–π–ø –¥–≤–∏–∂–µ–Ω–∏–µ:', { deltaX, deltaY, distance });
  };

  const handleEnd = () => {
    if (!isDragging) return;
    
    console.log('üõë –ö–æ–Ω–µ—Ü –∫–∞—Å–∞–Ω–∏—è', { dragDistance, dragOffset, isClick });
    
    // –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª —Å–≤–∞–π–ø (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ)
    const threshold = 60;
    if (!isClick && dragDistance > 20 && Math.abs(dragOffset.x) > threshold) {
      console.log('‚úÖ –°–≤–∞–π–ø –≤—ã–ø–æ–ª–Ω–µ–Ω:', dragOffset.x > 0 ? 'LIKE' : 'DISLIKE');
      if (dragOffset.x > 0) {
        handleLike();
      } else {
        handleDislike();
      }
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    setIsDragging(false);
    setDragOffset({ x: 0, y: 0 });
    setDragDistance(0);
    
    // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∫–ª–∏–∫–∞ —á—Ç–æ–±—ã onClick —É—Å–ø–µ–ª —Å—Ä–∞–±–æ—Ç–∞—Ç—å
    setTimeout(() => {
      setIsClick(false);
    }, 50);
  };

  const handleMouseDown = (e) => {
    e.preventDefault();
    handleStart(e.clientX, e.clientY);
  };

  const handleTouchStart = (e) => {
    const touch = e.touches[0];
    handleStart(touch.clientX, touch.clientY);
  };

  useEffect(() => {
    const handleMouseMove = (e) => {
      e.preventDefault();
      handleMove(e.clientX, e.clientY);
    };
    const handleMouseUp = (e) => {
      e.preventDefault();
      handleEnd();
    };
    const handleTouchMove = (e) => {
      e.preventDefault();
      const touch = e.touches[0];
      handleMove(touch.clientX, touch.clientY);
    };
    const handleTouchEnd = (e) => {
      e.preventDefault();
      handleEnd();
    };

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è —Å–≤–∞–π–ø–∞
    if (isDragging) {
      document.addEventListener('mousemove', handleMouseMove);
      document.addEventListener('mouseup', handleMouseUp);
      document.addEventListener('touchmove', handleTouchMove, { passive: false });
      document.addEventListener('touchend', handleTouchEnd);
      
      return () => {
        document.removeEventListener('mousemove', handleMouseMove);
        document.removeEventListener('mouseup', handleMouseUp);
        document.removeEventListener('touchmove', handleTouchMove);
        document.removeEventListener('touchend', handleTouchEnd);
      };
    }
  }, [isDragging, startPos, dragOffset]);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–º–µ—Å—Ç–æ ref

  // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–ª—è matches
  useEffect(() => {
    try {
      localStorage.setItem('matches', JSON.stringify(matches));
      console.log('üíæ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ matches:', matches.length);
    } catch (e) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è matches:', e);
    }
  }, [matches]);
  
  // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–ª—è likedProfiles  
  useEffect(() => {
    try {
      localStorage.setItem('likedProfiles', JSON.stringify(likedProfiles));
      console.log('üíæ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ likedProfiles:', likedProfiles.length);
    } catch (e) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è likedProfiles:', e);
    }
  }, [likedProfiles]);

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
  useEffect(() => {
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏:', messageUpdate);
  }, [messageUpdate, chatMessages]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –æ–∫–Ω–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
  useEffect(() => {
    console.log('üîç useEffect - showFullScreenMatch:', !!showFullScreenMatch, showFullScreenMatch?.name);
    if (showFullScreenMatch && showFullScreenMatch.photos && showFullScreenMatch.photos.length > 1) {
      console.log('üîÑ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π');
      const interval = setInterval(() => {
        setMatchPhotoIndex(prev => {
          const newIndex = (prev + 1) % showFullScreenMatch.photos.length;
          console.log('üì∏ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ:', prev, '->', newIndex);
          return newIndex;
        });
      }, 3000);
      
      return () => {
        console.log('‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è');
        clearInterval(interval);
      };
    }
  }, [showFullScreenMatch]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –ø—Ä–æ—Ñ–∏–ª–µ –¥–µ–≤—É—à–∫–∏
  useEffect(() => {
    if (showProfileView && showProfileView.photos && showProfileView.photos.length > 1) {
      const interval = setInterval(() => {
        setProfilePhotoIndex(prev => {
          const newIndex = (prev + 1) % showProfileView.photos.length;
          return newIndex;
        });
      }, 4000); // –ß—É—Ç—å –º–µ–¥–ª–µ–Ω–Ω–µ–µ —á–µ–º –≤ –æ–∫–Ω–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
      
      return () => clearInterval(interval);
    }
  }, [showProfileView]);

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞
  useEffect(() => {
    console.log('üö® DEBUG - –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:', {
      showFullScreenMatch: !!showFullScreenMatch,
      matchName: showFullScreenMatch?.name,
      matchPhotoIndex: matchPhotoIndex
    });
  }, [showFullScreenMatch, matchPhotoIndex]);

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è matches
  useEffect(() => {
    console.log('üö® DEBUG - Matches –∏–∑–º–µ–Ω–∏–ª–∏—Å—å:', matches);
  }, [matches]);

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è likedProfiles
  useEffect(() => {
    console.log('üö® DEBUG - LikedProfiles –∏–∑–º–µ–Ω–∏–ª–∏—Å—å:', likedProfiles);
  }, [likedProfiles]);

  const DiscoverView = () => {
    const profile = profiles[currentProfile];
    const rotation = dragOffset.x * 0.05;
    const opacity = Math.max(0.8, 1 - Math.abs(dragOffset.x) * 0.001);
    
    return (
      <div className="flex flex-col h-full bg-white relative overflow-hidden">
        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        <div 
          className="flex-1 relative bg-cover bg-center"
          style={{ 
            backgroundImage: `linear-gradient(to bottom, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0.7) 100%), url('${profile.photos[currentPhotoIndex]}')`,
            transform: `translateX(${isDragging ? dragOffset.x : 0}px) rotate(${isDragging ? rotation : 0}deg)`,
            opacity: isDragging ? opacity : 1,
            transition: isDragging ? 'none' : 'transform 0.3s ease-out, opacity 0.3s ease-out'
          }}
        >
          {/* Stories –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã */}
          <div className="absolute top-4 left-4 right-4 flex space-x-1">
            {profile.photos.map((_, index) => (
              <div
                key={index}
                className="flex-1 h-1 bg-black/30 rounded-full overflow-hidden"
              >
                <div 
                  className={`h-full transition-all duration-300 rounded-full ${
                    index === currentPhotoIndex ? 'bg-white' : 
                    index < currentPhotoIndex ? 'bg-white' : 'bg-transparent'
                  }`}
                />
              </div>
            ))}
          </div>

          {/* –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –ó–û–ù–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê */}
          <div className="absolute inset-0 flex z-30">
            {/* –ö–†–ê–ô–ù–Ø–Ø –õ–ï–í–ê–Ø –ó–û–ù–ê - —Ç–æ–ª—å–∫–æ —Å–≤–∞–π–ø (7%) */}
            <div 
              className="cursor-grab"
              style={{ width: '7%' }}
              onMouseDown={(e) => {
                e.preventDefault();
                e.stopPropagation();
                console.log('üî¥ –õ–ï–í–ê–Ø –°–í–ê–ô–ü –ó–û–ù–ê (7%) –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
                handleMouseDown(e);
              }}
              onTouchStart={(e) => {
                e.preventDefault();
                e.stopPropagation();
                console.log('üî¥ –õ–ï–í–ê–Ø –°–í–ê–ô–ü –ó–û–ù–ê (7%) (touch) –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
                handleTouchStart(e);
              }}
            />
            
            {/* –õ–ï–í–ê–Ø –ó–û–ù–ê –ö–õ–ò–ö–ê - –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Ñ–æ—Ç–æ (25%) */}
            <div 
              className="cursor-pointer"
              style={{ width: '25%' }}
              onClick={(e) => {
                e.preventDefault();
                e.stopPropagation();
                setCurrentPhotoIndex(prev => 
                  prev > 0 ? prev - 1 : profile.photos.length - 1
                );
                console.log('üü† –õ–ï–í–ê–Ø –§–û–¢–û –ó–û–ù–ê (25%) - –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Ñ–æ—Ç–æ');
              }}
            />
            
            {/* –¶–ï–ù–¢–†–ê–õ–¨–ù–ê–Ø –ó–û–ù–ê - –æ—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (36%) */}
            <div 
              className="cursor-pointer"
              style={{ width: '36%' }}
              onClick={(e) => {
                e.preventDefault();
                e.stopPropagation();
                console.log('üîµ –¶–ï–ù–¢–†–ê–õ–¨–ù–ê–Ø –ó–û–ù–ê (36%) - –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è');
                console.log('üë§ –ü—Ä–æ—Ñ–∏–ª—å –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è:', profile.name);
                setShowProfileView(profile);
                setProfilePhotoIndex(0);
                console.log('‚úÖ setShowProfileView –≤—ã–ø–æ–ª–Ω–µ–Ω –¥–ª—è:', profile.name);
              }}
            />
            
            {/* –ü–†–ê–í–ê–Ø –ó–û–ù–ê –ö–õ–ò–ö–ê - —Å–ª–µ–¥—É—é—â–µ–µ —Ñ–æ—Ç–æ (25%) */}
            <div 
              className="cursor-pointer"
              style={{ width: '25%' }}
              onClick={(e) => {
                e.preventDefault();
                e.stopPropagation();
                setCurrentPhotoIndex(prev => 
                  prev < profile.photos.length - 1 ? prev + 1 : 0
                );
                console.log('üü° –ü–†–ê–í–ê–Ø –§–û–¢–û –ó–û–ù–ê (25%) - —Å–ª–µ–¥—É—é—â–µ–µ —Ñ–æ—Ç–æ');
              }}
            />
            
            {/* –ö–†–ê–ô–ù–Ø–Ø –ü–†–ê–í–ê–Ø –ó–û–ù–ê - —Ç–æ–ª—å–∫–æ —Å–≤–∞–π–ø (7%) */}
            <div 
              className="cursor-grab"
              style={{ width: '7%' }}
              onMouseDown={(e) => {
                e.preventDefault();
                e.stopPropagation();
                console.log('üü¢ –ü–†–ê–í–ê–Ø –°–í–ê–ô–ü –ó–û–ù–ê (7%) –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
                handleMouseDown(e);
              }}
              onTouchStart={(e) => {
                e.preventDefault();
                e.stopPropagation();
                console.log('üü¢ –ü–†–ê–í–ê–Ø –°–í–ê–ô–ü –ó–û–ù–ê (7%) (touch) –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
                handleTouchStart(e);
              }}
            />
          </div>

          {/* –¢–µ–≥–∏ –ø—Ä–∏ —Å–≤–∞–π–ø–µ */}
          {isDragging && !isClick && dragOffset.x > 50 && (
            <div 
              className="absolute top-1/2 left-8 transform -translate-y-1/2 rotate-12 transition-opacity duration-200"
              style={{ opacity: Math.min(1, (dragOffset.x - 50) / 100) }}
            >
              <div className="bg-gradient-to-r from-pink-500 to-pink-600 text-white px-6 py-3 rounded-2xl font-bold text-2xl border-4 border-pink-300 shadow-2xl backdrop-blur-sm">
                <div className="flex items-center space-x-2">
                  <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 4.318c-1.754-1.753-4.596-1.753-6.35 0-1.753 1.754-1.753 4.596 0 6.35L12 17.018l6.35-6.35c1.753-1.754 1.753-4.596 0-6.35-1.754-1.753-4.596-1.753-6.35 0z" />
                  </svg>
                  <span>LIKE</span>
                </div>
              </div>
            </div>
          )}
          {isDragging && !isClick && dragOffset.x < -50 && (
            <div 
              className="absolute top-1/2 right-8 transform -translate-y-1/2 -rotate-12 transition-opacity duration-200"
              style={{ opacity: Math.min(1, (Math.abs(dragOffset.x) - 50) / 100) }}
            >
              <div className="bg-gradient-to-r from-gray-700 to-gray-800 text-white px-6 py-3 rounded-2xl font-bold text-2xl border-4 border-gray-500 shadow-2xl backdrop-blur-sm">
                <div className="flex items-center space-x-2">
                  <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={3} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                  <span>NOPE</span>
                </div>
              </div>
            </div>
          )}



          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–Ω–∏–∑—É –∫–∞—Ä—Ç–æ—á–∫–∏ - –ö–õ–ò–ö–ê–ë–ï–õ–¨–ù–ê–Ø –ó–û–ù–ê */}
          <div 
            className="absolute bottom-0 left-0 right-0 p-6 text-white cursor-pointer z-40"
            onClick={(e) => {
              e.preventDefault();
              e.stopPropagation();
              console.log('üìã –ö–õ–ò–ö –ü–û –ò–ù–§–û–†–ú–ê–¶–ò–û–ù–ù–û–ô –ó–û–ù–ï - –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è:', profile.name);
              setShowProfileView(profile);
              setProfilePhotoIndex(0);
            }}
          >
            {/* –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è */}
            <div className="flex items-center mb-3">
              <svg className="w-4 h-4 mr-2 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
              </svg>
              <span className="text-white/70 text-sm">{profile.distance} –∫–º</span>
              <div className="flex items-center ml-3">
                <svg className="w-4 h-4 mr-1 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                </svg>
                <span className="text-white/70 text-sm">–ò—â—É —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω—É—é –¥—É—à—É</span>
              </div>
            </div>

            {/* –ò–º—è –∏ –≤–æ–∑—Ä–∞—Å—Ç */}
            <h2 className="text-3xl font-bold mb-2 flex items-center">
              {profile.name}, {profile.age}
              <svg className="w-6 h-6 ml-2 text-blue-500" fill="currentColor" viewBox="0 0 24 24">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </h2>

            {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
            <p className="text-white/90 text-sm mb-4">{profile.bio}</p>

            {/* –¢–µ–≥–∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ */}
            <div className="flex flex-wrap gap-2 mb-4">
              {profile.interests.slice(0, 6).map((interest, index) => (
                <div key={index} className="flex items-center bg-black/30 backdrop-blur-sm rounded-full px-3 py-1">
                  {index === 0 && <svg className="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 24 24"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/></svg>}
                  {index === 1 && <svg className="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 24 24"><path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/></svg>}
                  {index === 2 && <svg className="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 24 24"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z"/></svg>}
                  {index === 3 && <svg className="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 24 24"><path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/></svg>}
                  {index === 4 && <svg className="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 24 24"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z"/></svg>}
                  {index === 5 && <svg className="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 24 24"><path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/></svg>}
                  <span className="text-xs text-white">{interest}</span>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
        <div className="bg-white p-4">
          <div className="flex justify-center items-center space-x-4">
            <button
              onClick={handleDislike}
              className="w-14 h-14 bg-white rounded-full shadow-lg border border-gray-200 flex items-center justify-center hover:scale-105 transition-transform"
            >
              <svg className="w-7 h-7 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>

            <button
              onClick={handleSuperLike}
              className="w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full shadow-lg flex items-center justify-center hover:scale-105 transition-transform relative"
            >
              <svg className="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />
              </svg>
            </button>

            <button
              onClick={handleLike}
              className="w-14 h-14 bg-white rounded-full shadow-lg border border-gray-200 flex items-center justify-center hover:scale-105 transition-transform"
            >
              <svg className="w-7 h-7 text-pink-500" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 4.318c-1.754-1.753-4.596-1.753-6.35 0-1.753 1.754-1.753 4.596 0 6.35L12 17.018l6.35-6.35c1.753-1.754 1.753-4.596 0-6.35-1.754-1.753-4.596-1.753-6.35 0z" />
              </svg>
            </button>
          </div>
        </div>
      </div>
    );
  };

  const ChatView = () => {
    console.log('üí¨ ChatView render - selectedMatch:', selectedMatch);
    
    const [message, setMessage] = useState('');

    if (selectedMatch) {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –∏–∑ React —Å–æ—Å—Ç–æ—è–Ω–∏—è
      const messages = chatMessages[selectedMatch.id] || [];
      
      console.log('üí¨ ChatView render:', { 
        selectedMatch: selectedMatch.id, 
        selectedMatchName: selectedMatch.name,
        messagesCount: messages.length,
        messageUpdate: messageUpdate,
        forceUpdate: forceUpdate
      });
      
      // –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
      if (messages.length > 0) {
        console.log('üìã –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ:');
        messages.forEach((msg, index) => {
          console.log(`  ${index + 1}. [${msg.sender}] "${msg.text}" (ID: ${msg.id}, –≤—Ä–µ–º—è: ${new Date(msg.timestamp).toLocaleTimeString()})`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è–º
        const userMessages = messages.filter(m => m.sender === 'user');
        const matchMessages = messages.filter(m => m.sender === 'match');
        console.log('üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å -', userMessages.length, '–¥–µ–≤—É—à–∫–∞ -', matchMessages.length);
      } else {
        console.log('üì≠ –°–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ –Ω–µ—Ç (—á–∏—Å—Ç–∞—è –∏—Å—Ç–æ—Ä–∏—è)');
      }
      
      return (
        <div className="flex flex-col h-full bg-white">
          {/* –•–µ–¥–µ—Ä —á–∞—Ç–∞ */}
          <div className="bg-white p-4 shadow-sm border-b border-gray-100 flex items-center">
            <button
              onClick={(e) => {
                e.preventDefault();
                e.stopPropagation();
                setSelectedMatch(null);
                console.log('üîô –í–æ–∑–≤—Ä–∞—Ç –∫ —Å–ø–∏—Å–∫—É —á–∞—Ç–æ–≤');
              }}
              className="mr-3 p-2 hover:bg-gray-100 rounded-full transition-colors"
            >
              <svg className="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
              </svg>
            </button>
            <button
              onClick={(e) => {
                e.preventDefault();
                e.stopPropagation();
                setShowProfileView(selectedMatch);
                setProfilePhotoIndex(0);
                console.log('üë§ –ö–ª–∏–∫ –Ω–∞ –∞–≤–∞—Ç–∞—Ä –≤ —Ö–µ–¥–µ—Ä–µ - –æ—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è:', selectedMatch.name);
              }}
              className="flex items-center flex-1 hover:bg-gray-50 p-2 rounded-lg transition-colors"
            >
              <img 
                src={selectedMatch.photos && selectedMatch.photos[0] ? selectedMatch.photos[0] : 'assets/default_avatar.png?prompt=Beautiful%20young%20woman%20portrait%20default%20avatar'}
                alt={selectedMatch.name}
                className="w-10 h-10 rounded-full object-cover border-2 border-pink-200 mr-3"
              />
              <div className="flex-1 text-left">
                <h3 className="font-semibold text-gray-800">{selectedMatch.name}</h3>
                <p className="text-sm text-gray-500">–û–Ω–ª–∞–π–Ω</p>
              </div>
            </button>
            
            {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —á–∞—Ç–∞ */}
            <button
              onClick={(e) => {
                e.preventDefault();
                e.stopPropagation();
                const chatIdToDelete = selectedMatch.id;
                console.log('üóëÔ∏è –ö–ª–∏–∫ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —á–∞—Ç–∞ –∏–∑ —Ö–µ–¥–µ—Ä–∞:', chatIdToDelete);
                setDeletingChat(chatIdToDelete);
              }}
              className="p-2 hover:bg-gray-100 rounded-full transition-colors"
              title="–£–¥–∞–ª–∏—Ç—å —á–∞—Ç"
              disabled={deletingChat !== null} // –ó–∞—â–∏—Ç–∞ –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–ª–∏–∫–æ–≤
            >
              <svg className="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
              </svg>
            </button>
          </div>

          {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
          <div 
            className="flex-1 overflow-y-auto p-4 space-y-3"
            ref={(el) => {
              if (el) {
                // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
                setTimeout(() => {
                  el.scrollTop = el.scrollHeight;
                }, 100);
              }
            }}
          >
            {messages.length === 0 ? (
              <div className="flex flex-col items-center justify-center h-full">
                <div className="text-4xl mb-4">üíù</div>
                <h4 className="text-lg font-semibold text-gray-800 mb-2">–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ!</h4>
                <p className="text-gray-500 text-center">–í—ã –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å –¥—Ä—É–≥ –¥—Ä—É–≥—É! –ù–∞—á–Ω–∏—Ç–µ —Ä–∞–∑–≥–æ–≤–æ—Ä</p>
              </div>
            ) : (
              messages.map((msg, index) => (
                <div
                  key={`msg-${msg.id}-${index}-${messageUpdate}`}
                  className={`flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}
                >
                  <div
                    className={`max-w-xs px-4 py-2 rounded-2xl ${
                      msg.sender === 'user'
                        ? 'bg-pink-500 text-white ml-12'
                        : 'bg-gray-100 text-gray-800 mr-12'
                    }`}
                  >
                    <p className="text-sm">{msg.text}</p>
                  </div>
                </div>
              ))
            )}
          </div>

          {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
          <div className="bg-white p-4 border-t border-gray-100">
            <div className="flex items-center space-x-2">
              <input
                type="text"
                value={message}
                onChange={(e) => setMessage(e.target.value)}
                onKeyPress={(e) => {
                  if (e.key === 'Enter') {
                    e.preventDefault();
                    const messageText = message.trim();
                    if (messageText) {
                      sendMessage(selectedMatch.id, messageText);
                      setMessage('');
                    }
                  }
                }}
                placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                className="flex-1 px-4 py-2 border border-gray-300 rounded-full focus:outline-none focus:border-pink-500"
                autoComplete="off"
              />
              <button
                onClick={() => {
                  const messageText = message.trim();
                  if (messageText) {
                    sendMessage(selectedMatch.id, messageText);
                    setMessage('');
                  }
                }}
                className="p-2 bg-pink-500 text-white rounded-full hover:bg-pink-600 transition-colors"
              >
                <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8" />
                </svg>
              </button>
            </div>
          </div>
          
          {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è */}
          {deletingChat === selectedMatch.id && (
            <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
              <div className="bg-white p-6 rounded-lg max-w-sm mx-4">
                <h3 className="text-lg font-semibold text-gray-800 mb-3">–£–¥–∞–ª–∏—Ç—å —á–∞—Ç?</h3>
                <p className="text-gray-600 mb-6">
                  –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å {selectedMatch.name} –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.
                </p>
                <div className="flex space-x-3">
                  <button
                    onClick={() => setDeletingChat(null)}
                    className="flex-1 py-2 px-4 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors"
                  >
                    –û—Ç–º–µ–Ω–∞
                  </button>
                  <button
                    onClick={(e) => {
                      e.preventDefault();
                      e.stopPropagation();
                      
                      const matchIdToDelete = deletingChat; // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                      console.log('üóëÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —á–∞—Ç–∞ –∏–∑ –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –æ–∫–Ω–∞:', matchIdToDelete);
                      
                      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                      setDeletingChat(null);
                      
                      // –£–¥–∞–ª—è–µ–º —á–∞—Ç —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
                      setTimeout(() => {
                        deleteChat(matchIdToDelete);
                      }, 100);
                    }}
                    className="flex-1 py-2 px-4 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors"
                    disabled={!deletingChat} // –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∫–ª–∏–∫–∞
                  >
                    –£–¥–∞–ª–∏—Ç—å
                  </button>
                </div>
              </div>
            </div>
          )}
        </div>
      );
    }

    return (
      <div className="flex flex-col h-full bg-white">
        <div className="bg-white p-4 shadow-sm border-b border-gray-100">
          <h2 className="text-xl font-bold text-gray-800">–ß–∞—Ç—ã</h2>
          <p className="text-gray-500 text-sm">{matches.length} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π</p>
          {/* –°–∫—Ä—ã—Ç—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
          <div style={{ display: 'none' }}>{forceUpdate}-{messageUpdate}-{matches.length}-{JSON.stringify(matches.map(m => m.id))}</div>
          {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div style={{ display: 'none' }}>
            DEBUG: matches={JSON.stringify(matches.map(m => ({ id: m.id, name: m.name })))}, forceUpdate={forceUpdate}, messageUpdate={messageUpdate}, timestamp={Date.now()}
          </div>
        </div>
        
        <div className="flex-1 overflow-y-auto">
          {matches.length === 0 ? (
            <div className="flex flex-col items-center justify-center h-full p-8">
              <div className="text-6xl mb-4">üí¨</div>
              <h3 className="text-lg font-semibold text-gray-800 mb-2">–ü–æ–∫–∞ –Ω–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π</h3>
              <p className="text-gray-500 text-center">–ö–æ–≥–¥–∞ –≤—ã –ø–æ–Ω—Ä–∞–≤–∏—Ç–µ—Å—å –¥—Ä—É–≥ –¥—Ä—É–≥—É, –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è –≤–∞—à–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è</p>
            </div>
          ) : (
            <div className="p-4 space-y-3" key={`matches-list-${matches.length}-${forceUpdate}-${messageUpdate}-${JSON.stringify(matches.map(m => m.id))}`}>
              {matches.map((match, index) => (
                <div 
                  key={`match-${match.id}-${index}-${forceUpdate}-${messageUpdate}`}
                  className="flex items-center p-3 bg-white rounded-lg border border-gray-100 hover:bg-gray-50 cursor-pointer group"
                >
                  <div 
                    onClick={() => setSelectedMatch(match)}
                    className="flex items-center flex-1"
                  >
                    <img 
                      src={match.photos && match.photos[0] ? match.photos[0] : 'assets/default_avatar.png?prompt=Beautiful%20young%20woman%20portrait%20default%20avatar'}
                      alt={match.name}
                      className="w-14 h-14 rounded-full object-cover border-2 border-pink-200"
                    />
                    <div className="ml-3 flex-1">
                      <h4 className="font-semibold text-gray-800">{match.name}</h4>
                      <p className="text-sm text-gray-500">
                        {chatMessages[match.id] && chatMessages[match.id].length > 0
                          ? chatMessages[match.id][chatMessages[match.id].length - 1].text
                          : "–í—ã –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å –¥—Ä—É–≥ –¥—Ä—É–≥—É!"}
                      </p>
                    </div>
                    <div className="w-3 h-3 bg-pink-500 rounded-full"></div>
                  </div>
                  
                  {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è (–ø–æ—è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏) */}
                  <button
                    onClick={(e) => {
                      e.preventDefault();
                      e.stopPropagation();
                      const chatIdToDelete = match.id;
                      console.log('üóëÔ∏è –ö–ª–∏–∫ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —á–∞—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞:', chatIdToDelete);
                      setDeletingChat(chatIdToDelete);
                    }}
                    className="ml-2 p-2 hover:bg-red-100 rounded-full transition-colors opacity-0 group-hover:opacity-100"
                    title="–£–¥–∞–ª–∏—Ç—å —á–∞—Ç"
                    disabled={deletingChat !== null} // –ó–∞—â–∏—Ç–∞ –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–ª–∏–∫–æ–≤
                  >
                    <svg className="w-4 h-4 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                    </svg>
                  </button>
                </div>
              ))}
            </div>
          )}
        </div>
      </div>
    );
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –¥–µ–≤—É—à–∫–∏
  const GirlProfileView = ({ profile, onClose }) => {
    return (
      <div 
        className="fixed inset-0 bg-white flex flex-col"
        style={{ 
          zIndex: 999999,
          position: 'fixed',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          width: '100vw',
          height: '100vh'
        }}
      >
        {/* –•–µ–¥–µ—Ä */}
        <div className="bg-white p-4 shadow-sm border-b border-gray-100 flex items-center">
          <button
            onClick={onClose}
            className="mr-3 p-2 hover:bg-gray-100 rounded-full transition-colors"
          >
            <svg className="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
            </svg>
          </button>
          <h2 className="text-xl font-bold text-gray-800">{profile.name}</h2>
        </div>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="flex-1 overflow-y-auto">
          {/* –ì–ª–∞–≤–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è */}
          <div className="relative h-96 bg-gray-200">
            {/* Stories –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã */}
            <div className="absolute top-4 left-4 right-4 flex space-x-1 z-10">
              {profile.photos.map((_, index) => (
                <div
                  key={index}
                  className="flex-1 h-1 bg-black/30 rounded-full overflow-hidden"
                >
                  <div 
                    className={`h-full transition-all duration-300 rounded-full ${
                      index === profilePhotoIndex ? 'bg-white' : 
                      index < profilePhotoIndex ? 'bg-white' : 'bg-transparent'
                    }`}
                  />
                </div>
              ))}
            </div>

            <img 
              src={profile.photos[profilePhotoIndex]}
              alt={profile.name}
              className="w-full h-full object-cover"
            />

            {/* –ö–ª–∏–∫ –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ñ–æ—Ç–æ */}
            <div className="absolute inset-0 flex">
              <button 
                className="flex-1"
                onClick={() => setProfilePhotoIndex(prev => 
                  prev > 0 ? prev - 1 : profile.photos.length - 1
                )}
              />
              <button 
                className="flex-1"
                onClick={() => setProfilePhotoIndex(prev => 
                  prev < profile.photos.length - 1 ? prev + 1 : 0
                )}
              />
            </div>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="p-6 space-y-6">
            {/* –ò–º—è –∏ –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div>
              <div className="flex items-center mb-3">
                <h1 className="text-3xl font-bold text-gray-800">{profile.name}, {profile.age}</h1>
                <svg className="w-6 h-6 ml-2 text-blue-500" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              
              <div className="flex items-center text-gray-600 mb-3">
                <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>
                <span className="text-sm">{profile.distance} –∫–º –æ—Ç –≤–∞—Å ‚Ä¢ {profile.city}</span>
              </div>

              {profile.job && (
                <div className="flex items-center text-gray-600 mb-3">
                  <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2-2v2m8 0V6a2 2 0 012 2v6a2 2 0 01-2 2H8a2 2 0 01-2-2V8a2 2 0 012-2V6" />
                  </svg>
                  <span className="text-sm">{profile.job}</span>
                </div>
              )}

              {profile.education && (
                <div className="flex items-center text-gray-600 mb-3">
                  <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 14l9-5-9-5-9 5 9 5z" />
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z" />
                  </svg>
                  <span className="text-sm">{profile.education}</span>
                </div>
              )}

              {profile.height && (
                <div className="flex items-center text-gray-600 mb-4">
                  <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 21l3-3-3-3M14 3l3 3-3 3M4 12h16" />
                  </svg>
                  <span className="text-sm">{profile.height}</span>
                </div>
              )}
            </div>

            {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
            {profile.bio && (
              <div>
                <h3 className="text-lg font-semibold text-gray-800 mb-2">–û —Å–µ–±–µ</h3>
                <p className="text-gray-600 leading-relaxed">{profile.bio}</p>
              </div>
            )}

            {/* –ò–Ω—Ç–µ—Ä–µ—Å—ã */}
            {profile.interests && profile.interests.length > 0 && (
              <div>
                <h3 className="text-lg font-semibold text-gray-800 mb-3">–ò–Ω—Ç–µ—Ä–µ—Å—ã</h3>
                <div className="flex flex-wrap gap-2">
                  {profile.interests.map((interest, index) => (
                    <span 
                      key={index}
                      className="bg-pink-100 text-pink-700 px-3 py-2 rounded-full text-sm border border-pink-200"
                    >
                      {interest}
                    </span>
                  ))}
                </div>
              </div>
            )}

            {/* –í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ */}
            {profile.photos && profile.photos.length > 1 && (
              <div>
                <h3 className="text-lg font-semibold text-gray-800 mb-3">–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏</h3>
                <div className="grid grid-cols-2 gap-3">
                  {profile.photos.map((photo, index) => (
                    <button
                      key={index}
                      onClick={() => setProfilePhotoIndex(index)}
                      className={`aspect-square rounded-lg overflow-hidden border-2 transition-all ${
                        index === profilePhotoIndex ? 'border-pink-500 scale-95' : 'border-gray-200 hover:border-gray-300'
                      }`}
                    >
                      <img 
                        src={photo}
                        alt={`${profile.name} —Ñ–æ—Ç–æ ${index + 1}`}
                        className="w-full h-full object-cover"
                      />
                    </button>
                  ))}
                </div>
              </div>
            )}
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="bg-white p-4 border-t border-gray-100">
          <div className="flex space-x-3">
            <button
              onClick={onClose}
              className="flex-1 bg-gray-100 text-gray-700 py-3 rounded-lg font-semibold hover:bg-gray-200 transition-colors"
            >
              –ó–∞–∫—Ä—ã—Ç—å
            </button>
            
            {/* –ö–Ω–æ–ø–∫–∞ –ª–∞–π–∫–∞ –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —á–∞—Ç—É –µ—Å–ª–∏ —É–∂–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ */}
            {matches.find(m => m.id === profile.id) ? (
              <button
                onClick={() => {
                  setSelectedMatch(profile);
                  setCurrentView('chats');
                  onClose();
                }}
                className="flex-1 bg-pink-500 text-white py-3 rounded-lg font-semibold hover:bg-pink-600 transition-colors"
              >
                –ü–µ—Ä–µ–π—Ç–∏ –∫ —á–∞—Ç—É
              </button>
            ) : (
              <button
                onClick={() => {
                  // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –µ—â–µ –Ω–µ –ª–∞–π–∫–Ω—É—Ç, –ª–∞–π–∫–∞–µ–º
                  if (!likedProfiles.includes(profile.id)) {
                    setLikedProfiles([...likedProfiles, profile.id]);
                    
                    // –°–æ–∑–¥–∞–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å –≤—ã—Å–æ–∫–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é
                    if (Math.random() > 0.3) {
                      setMatches(prev => {
                        if (prev.find(m => m.id === profile.id)) return prev;
                        return [...prev, profile];
                      });
                      
                      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
                      setShowFullScreenMatch(profile);
                    }
                  }
                  onClose();
                }}
                className="flex-1 bg-pink-500 text-white py-3 rounded-lg font-semibold hover:bg-pink-600 transition-colors flex items-center justify-center"
              >
                <svg className="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 4.318c-1.754-1.753-4.596-1.753-6.35 0-1.753 1.754-1.753 4.596 0 6.35L12 17.018l6.35-6.35c1.753-1.754 1.753-4.596 0-6.35-1.754-1.753-4.596-1.753-6.35 0z" />
                </svg>
                –õ–∞–π–∫
              </button>
            )}
          </div>
        </div>
      </div>
    );
  };

  const ProfileView = () => {
    return (
      <div className="flex flex-col h-full bg-white">
        <div className="bg-white p-4 shadow-sm border-b border-gray-100">
          <h2 className="text-xl font-bold text-gray-800">–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</h2>
          <p className="text-sm text-gray-500">ID: {currentUser.telegramId}</p>
        </div>
        
        <div className="flex-1 overflow-y-auto p-6">
          {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="mb-6 p-4 bg-blue-50 rounded-lg border border-blue-200">
            <div className="flex items-center mb-2">
              <svg className="w-5 h-5 text-blue-600 mr-2" fill="currentColor" viewBox="0 0 24 24">
                <path d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
              <span className="font-semibold text-blue-800">–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</span>
            </div>
            <div className="text-sm text-blue-700 space-y-1">
              <p><strong>Telegram –¥–æ—Å—Ç—É–ø–µ–Ω:</strong> {getTelegramWebApp() ? '–î–∞ ‚úÖ' : '–ù–µ—Ç ‚ùå'}</p>
              <p><strong>Platform:</strong> {getTelegramWebApp()?.platform || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</p>
              <p><strong>Version:</strong> {getTelegramWebApp()?.version || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</p>
              <p><strong>InitData –µ—Å—Ç—å:</strong> {getTelegramWebApp()?.initData ? '–î–∞ ‚úÖ' : '–ù–µ—Ç ‚ùå'}</p>
              <p><strong>User –¥–∞–Ω–Ω—ã–µ:</strong> {getTelegramWebApp()?.initDataUnsafe?.user ? '–ï—Å—Ç—å ‚úÖ' : '–ù–µ—Ç ‚ùå'}</p>
              <p><strong>–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:</strong> {authError || '–ù–µ—Ç'}</p>
            </div>
            <button
              onClick={() => {
                const tg = getTelegramWebApp();
                const debugInfo = {
                  telegramAvailable: !!tg,
                  platform: tg?.platform,
                  version: tg?.version,
                  initData: !!tg?.initData,
                  user: tg?.initDataUnsafe?.user,
                  currentURL: window.location.href,
                  userAgent: navigator.userAgent
                };
                console.log('üîç –ü–û–õ–ù–ê–Ø –û–¢–õ–ê–î–û–ß–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:', debugInfo);
                navigator.clipboard?.writeText(JSON.stringify(debugInfo, null, 2));
                alert('–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –∫–æ–Ω—Å–æ–ª—å –∏ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
              }}
              className="mt-2 px-3 py-1 bg-blue-500 text-white rounded text-xs hover:bg-blue-600 transition-colors"
            >
              –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            </button>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
          <div className="mb-6 p-4 bg-green-50 rounded-lg border border-green-200">
            <div className="flex items-center mb-2">
              <svg className="w-5 h-5 text-green-600 mr-2" fill="currentColor" viewBox="0 0 24 24">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
              <span className="font-semibold text-green-800">–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω —á–µ—Ä–µ–∑ Telegram</span>
            </div>
            <div className="text-sm text-green-700 space-y-1">
              <p><strong>–ò–º—è:</strong> {currentUser.firstName} {currentUser.lastName}</p>
              {currentUser.username && <p><strong>Username:</strong> @{currentUser.username}</p>}
              <p><strong>–Ø–∑—ã–∫:</strong> {currentUser.languageCode?.toUpperCase() || 'RU'}</p>
              {currentUser.isPremium && (
                <p className="flex items-center">
                  <span className="text-yellow-600 mr-1">‚≠ê</span>
                  <strong>Telegram Premium</strong>
                </p>
              )}
            </div>
          </div>

          <div className="text-center mb-6">
            <img 
              src={currentUser.photos[0]}
              alt={currentUser.name}
              className="w-32 h-32 rounded-full mx-auto object-cover border-4 border-pink-200 mb-4"
            />
            <h3 className="text-2xl font-bold text-gray-800">{currentUser.name}, {currentUser.age}</h3>
            <p className="text-gray-600 mt-2">{currentUser.bio}</p>
          </div>

          <div className="space-y-6">
            <div>
              <h4 className="font-semibold text-gray-800 mb-3">–ú–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã</h4>
              <div className="flex flex-wrap gap-2">
                {currentUser.interests.map((interest, index) => (
                  <span 
                    key={index}
                    className="bg-pink-100 text-pink-700 px-3 py-1 rounded-full text-sm border border-pink-200"
                  >
                    {interest}
                  </span>
                ))}
              </div>
            </div>

            <div>
              <h4 className="font-semibold text-gray-800 mb-3">–ú–æ–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏</h4>
              <div className="grid grid-cols-3 gap-2">
                {currentUser.photos.map((photo, index) => (
                  <img 
                    key={index}
                    src={photo}
                    alt={`–§–æ—Ç–æ ${index + 1}`}
                    className="aspect-square rounded-lg object-cover border border-gray-200"
                  />
                ))}
              </div>
            </div>

            <button className="w-full bg-pink-500 text-white py-3 rounded-lg font-semibold hover:bg-pink-600 transition-colors mb-3">
              –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
            </button>
            
            <button 
              onClick={() => {
                if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –í–°–ï —á–∞—Ç—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
                  clearAllChats();
                  alert('–í—Å–µ —á–∞—Ç—ã –∏ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
                }
              }}
              className="w-full bg-red-500 text-white py-3 rounded-lg font-semibold hover:bg-red-600 transition-colors"
            >
              üßπ –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —á–∞—Ç—ã
            </button>
          </div>
        </div>
      </div>
    );
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏
  const LoadingView = () => (
    <div className="flex flex-col items-center justify-center h-full bg-gradient-to-br from-pink-500 to-purple-600">
      <div className="text-white text-center">
        <div className="text-6xl mb-6">üíï</div>
        <h1 className="text-3xl font-bold mb-4">True Love</h1>
        <div className="animate-spin w-8 h-8 border-4 border-white border-t-transparent rounded-full mx-auto mb-4"></div>
        <p className="text-white/80">
          {!isAuthenticated && !authError ? '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...' : '–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...'}
        </p>
        {authError && (
          <div className="mt-4 p-3 bg-red-500/20 rounded-lg">
            <p className="text-sm text-red-100">‚ö†Ô∏è {authError}</p>
            <div className="space-y-2">
              <button
                onClick={() => authenticateUser()}
                className="w-full px-4 py-2 bg-white/20 rounded-lg text-sm hover:bg-white/30 transition-colors"
              >
                –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
              </button>
              <button
                onClick={() => {
                  console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Telegram –¥–∞–Ω–Ω—ã—Ö:');
                  const tg = getTelegramWebApp();
                  if (tg) {
                    console.log('‚úÖ WebApp –Ω–∞–π–¥–µ–Ω:', tg);
                    console.log('üì± initDataUnsafe:', tg.initDataUnsafe);
                    console.log('üë§ User:', tg.initDataUnsafe?.user);
                    if (tg.initDataUnsafe?.user) {
                      alert(`–ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${tg.initDataUnsafe.user.first_name} (ID: ${tg.initDataUnsafe.user.id})`);
                    } else {
                      alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞.');
                    }
                  } else {
                    alert('Telegram WebApp –Ω–µ –Ω–∞–π–¥–µ–Ω. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ Telegram.');
                  }
                }}
                className="w-full px-4 py-2 bg-blue-500/20 rounded-lg text-sm hover:bg-blue-500/30 transition-colors"
              >
                –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Telegram
              </button>
            </div>
          </div>
        )}
      </div>
    </div>
  );

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–∫–∞ –∏–¥–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
  if (!isAuthenticated || !currentUser) {
    return (
      <div 
        className="w-full h-full max-w-md mx-auto flex flex-col relative"
        style={{
          backgroundColor: getTelegramWebApp()?.themeParams?.bg_color || '#FFFFFF',
          color: getTelegramWebApp()?.themeParams?.text_color || '#000000'
        }}
      >
        <LoadingView />
      </div>
    );
  }

  return (
    <>
      <div 
        className="w-full h-full max-w-md mx-auto flex flex-col relative"
        style={{
          backgroundColor: getTelegramWebApp()?.themeParams?.bg_color || '#FFFFFF',
          color: getTelegramWebApp()?.themeParams?.text_color || '#000000'
        }}
      >
        {/* –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
        <div className="flex-1 overflow-hidden">
          {currentView === 'discover' && <DiscoverView />}
          {currentView === 'chats' && <ChatView />}
          {currentView === 'profile' && <ProfileView />}
        </div>
      
      {/* Tab bar */}
      <div className="bg-white border-t border-gray-200 flex shrink-0">
        <button
          onClick={() => {
            console.log('üì± –ö–ª–∏–∫ –Ω–∞ –≤–∫–ª–∞–¥–∫—É —á–∞—Ç–æ–≤ - currentView:', currentView, 'selectedMatch:', selectedMatch);
            
            // –ï—Å–ª–∏ –º—ã —É–∂–µ –≤ —á–∞—Ç–∞—Ö –∏ –µ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É
            if (currentView === 'chats' && selectedMatch) {
              setSelectedMatch(null);
              console.log('üîô –í–æ–∑–≤—Ä–∞—Ç –∫ —Å–ø–∏—Å–∫—É —á–∞—Ç–æ–≤ –∏–∑ –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ —á–∞—Ç–∞');
            } else {
              // –ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∏–∑ –¥—Ä—É–≥–∏—Ö –≤–∫–ª–∞–¥–æ–∫ - —Ç–æ–ª—å–∫–æ –º–µ–Ω—è–µ–º –≤–∏–¥
              setCurrentView('chats');
              console.log('üì± –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª —á–∞—Ç–æ–≤');
            }
          }}
          className={`flex-1 py-3 px-4 text-center transition-colors ${
            currentView === 'chats' ? 'text-pink-500' : 'text-gray-400'
          }`}
        >
          <div className="w-6 h-6 mx-auto mb-1">
            <svg fill="currentColor" viewBox="0 0 24 24">
              <path d="M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4l4 4 4-4h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2z"/>
            </svg>
          </div>
        </button>
        
        <button
          onClick={() => setCurrentView('discover')}
          className={`flex-1 py-3 px-4 text-center transition-colors ${
            currentView === 'discover' ? 'text-pink-500' : 'text-gray-400'
          }`}
        >
          <div className="w-6 h-6 mx-auto mb-1">
            <svg fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
            </svg>
          </div>
        </button>
        
        <button
          onClick={() => setCurrentView('profile')}
          className={`flex-1 py-3 px-4 text-center transition-colors ${
            currentView === 'profile' ? 'text-pink-500' : 'text-gray-400'
          }`}
        >
          <div className="w-6 h-6 mx-auto mb-1">
            <svg fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
            </svg>
          </div>
        </button>
      </div>

      {/* –ü–û–õ–ù–û–≠–ö–†–ê–ù–ù–û–ï –û–ö–ù–û –°–û–í–ü–ê–î–ï–ù–ò–Ø */}
      {showFullScreenMatch && (
        <div 
          className="fixed inset-0 bg-black flex flex-col"
          style={{ zIndex: 9999 }}
        >
          {/* –§–æ–Ω —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π –¥–µ–≤—É—à–∫–∏ */}
          <div 
            className="flex-1 relative bg-cover bg-center"
            style={{ 
              backgroundImage: `linear-gradient(to bottom, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0.8) 100%), url('${showFullScreenMatch.photos[matchPhotoIndex]}')` 
            }}
          >
            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π */}
            <div className="absolute top-8 left-4 right-4 flex space-x-1">
              {showFullScreenMatch.photos.map((_, index) => (
                <div
                  key={index}
                  className="flex-1 h-1 bg-white/30 rounded-full overflow-hidden"
                >
                  <div 
                    className={`h-full transition-all duration-300 rounded-full ${
                      index === matchPhotoIndex ? 'bg-white' : 
                      index < matchPhotoIndex ? 'bg-white' : 'bg-transparent'
                    }`}
                  />
                </div>
              ))}
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è */}
            <button
              onClick={(e) => {
                e.preventDefault();
                e.stopPropagation();
                console.log('‚ùå –û–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É X - —á–∞—Ç –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞—Ç—å—Å—è –≤ —Å–ø–∏—Å–∫–µ');
                
                const currentMatch = showFullScreenMatch;
                console.log('üîç –¢–µ–∫—É—â–∏–π –º–∞—Ç—á –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', currentMatch);
                
                // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ —á–∞—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤ —Å–ø–∏—Å–∫–µ matches —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
                setMatches(prevMatches => {
                  const existingMatch = prevMatches.find(m => m.id === currentMatch.id);
                  console.log('üîç –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–∞—Ç—á –≤ —Å–ø–∏—Å–∫–µ:', existingMatch);
                  console.log('üìä –¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä —Å–ø–∏—Å–∫–∞ matches:', prevMatches.length);
                  
                  if (!existingMatch) {
                    console.log('‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ç—á –≤ —Å–ø–∏—Å–æ–∫');
                    const updatedMatches = [...prevMatches, currentMatch];
                    console.log('üìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ matches:', updatedMatches);
                    console.log('üìä –ù–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä —Å–ø–∏—Å–∫–∞:', updatedMatches.length);
                    return updatedMatches;
                  } else {
                    console.log('‚ÑπÔ∏è –ú–∞—Ç—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ');
                    return prevMatches;
                  }
                });
                
                // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                setForceUpdate(prev => {
                  const newValue = prev + 1;
                  console.log('üîÑ ForceUpdate –æ–±–Ω–æ–≤–ª–µ–Ω:', newValue);
                  return newValue;
                });
                
                setMessageUpdate(prev => {
                  const newValue = prev + 1;
                  console.log('üîÑ MessageUpdate –æ–±–Ω–æ–≤–ª–µ–Ω:', newValue);
                  return newValue;
                });
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
                setShowFullScreenMatch(null);
                nextProfile();
                
                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∑–∞–¥–µ—Ä–∂–∫—É
                setTimeout(() => {
                  setForceUpdate(prev => prev + 1);
                  setMessageUpdate(prev => prev + 1);
                  console.log('üîÑ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');
                }, 200);
              }}
              className="absolute top-8 right-4 p-3 bg-black/50 rounded-full backdrop-blur-sm hover:bg-black/70 transition-colors z-10"
            >
              <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>

            {/* –û–±–ª–∞—Å—Ç–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π */}
            <div className="absolute inset-0 flex">
              <button 
                className="flex-1"
                onClick={() => setMatchPhotoIndex(prev => 
                  prev > 0 ? prev - 1 : showFullScreenMatch.photos.length - 1
                )}
              />
              <button 
                className="flex-1"
                onClick={() => setMatchPhotoIndex(prev => 
                  prev < showFullScreenMatch.photos.length - 1 ? prev + 1 : 0
                )}
              />
            </div>

            {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è —Å–µ—Ä–¥–µ—Ü */}
            <div className="absolute inset-0 flex items-center justify-center">
              <div className="text-center">
                <div className="text-8xl mb-4 animate-pulse">üíï</div>
                <h2 className="text-4xl font-bold text-white mb-2 animate-bounce">
                  It's a Match!
                </h2>
                <h3 className="text-2xl font-bold text-white mb-1">
                  –í–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è
                </h3>
                <p className="text-white/90 text-lg">
                  –í—ã –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å –¥—Ä—É–≥ –¥—Ä—É–≥—É!
                </p>
              </div>
            </div>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–≤—É—à–∫–µ –≤–Ω–∏–∑—É */}
            <div className="absolute bottom-0 left-0 right-0 p-6 text-white">
              <div className="text-center mb-6">
                <h3 className="text-3xl font-bold mb-2">
                  {showFullScreenMatch.name}, {showFullScreenMatch.age}
                </h3>
                <div className="flex justify-center items-center mb-3">
                  <svg className="w-4 h-4 mr-2 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                  <span className="text-white/90">{showFullScreenMatch.distance} –∫–º ‚Ä¢ {showFullScreenMatch.city}</span>
                </div>
                <p className="text-white/80 text-sm mb-4">{showFullScreenMatch.bio}</p>
                
                {/* –ò–Ω—Ç–µ—Ä–µ—Å—ã */}
                <div className="flex flex-wrap justify-center gap-2 mb-6">
                  {showFullScreenMatch.interests.slice(0, 4).map((interest, index) => (
                    <span 
                      key={index}
                      className="bg-white/20 backdrop-blur-sm rounded-full px-3 py-1 text-xs text-white"
                    >
                      {interest}
                    </span>
                  ))}
                </div>
              </div>

              {/* –ö–Ω–æ–ø–∫–∞ */}
              <div className="px-4">
                <button
                  onClick={() => {
                    const currentMatch = showFullScreenMatch;
                    console.log('üí¨ –ù–∞—á–∞—Ç—å —á–∞—Ç - –ø–µ—Ä–µ—Ö–æ–¥ –∫ —á–∞—Ç–∞–º —Å:', currentMatch.name);
                    
                    // –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç
                    setSelectedMatch(currentMatch);
                    console.log('‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω selectedMatch:', currentMatch.name);
                    
                    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —á–∞—Ç–∞–º
                    setCurrentView('chats');
                    console.log('‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –∫ chats view');
                    
                    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–µ –æ–∫–Ω–æ
                    setShowFullScreenMatch(null);
                    
                    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
                    nextProfile();
                    
                    console.log('‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –∫ —á–∞—Ç—É —Å:', currentMatch.name);
                  }}
                  className="w-full bg-gradient-to-r from-pink-500 to-purple-600 text-white font-bold py-4 px-6 rounded-2xl hover:from-pink-600 hover:to-purple-700 transition-colors shadow-2xl"
                >
                  –ù–∞—á–∞—Ç—å —á–∞—Ç
                </button>
              </div>
            </div>
          </div>
        </div>
      )}

        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è */}
        {deletingChat && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white p-6 rounded-lg max-w-sm mx-4">
            <h3 className="text-lg font-semibold text-gray-800 mb-3">–£–¥–∞–ª–∏—Ç—å —á–∞—Ç?</h3>
            <p className="text-gray-600 mb-6">
              –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å {matches.find(m => m.id === deletingChat)?.name || '—ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'} –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.
            </p>
            <div className="flex space-x-3">
              <button
                onClick={() => setDeletingChat(null)}
                className="flex-1 py-2 px-4 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors"
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button
                onClick={(e) => {
                  e.preventDefault();
                  e.stopPropagation();
                  
                  const matchIdToDelete = deletingChat; // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                  console.log('üóëÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —á–∞—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞:', matchIdToDelete);
                  
                  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                  setDeletingChat(null);
                  
                  // –£–¥–∞–ª—è–µ–º —á–∞—Ç —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
                  setTimeout(() => {
                    deleteChat(matchIdToDelete);
                  }, 100);
                }}
                className="flex-1 py-2 px-4 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors"
                disabled={!deletingChat} // –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∫–ª–∏–∫–∞
              >
                –£–¥–∞–ª–∏—Ç—å
              </button>
            </div>
          </div>
        </div>
      )}
      </div>

      {/* –ü–†–û–§–ò–õ–¨ –î–ï–í–£–®–ö–ò - —Ä–µ–Ω–¥–µ—Ä–∏–º –≤–Ω–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */}
      {showProfileView && (
        <GirlProfileView 
          profile={showProfileView}
          onClose={() => {
            setShowProfileView(null);
            setProfilePhotoIndex(0);
            console.log('‚ùå –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –¥–µ–≤—É—à–∫–∏');
          }}
        />
      )}

    </>
  );
};

export default DatingApp;